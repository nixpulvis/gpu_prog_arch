#!/usr/bin/env python
import sys
import subprocess
import argparse
import ConfigParser
import numpy as np
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt

parser = argparse.ArgumentParser()
parser.add_argument('-f', '--from', type=int, default=10, help='Lower bound on the range to test.', dest='start')
parser.add_argument('-t', '--to', type=int, default=100, help='Upper bounds on the range to test.', dest='stop')
parser.add_argument('-s', '--step', type=int, default=10, help='The difference in each iteration.')
parser.add_argument('-o', '--outfile', required=True, help='The output image file.')
parser.add_argument('-b', '--binary', required=True, help='The Southern Islands binary file.')
parser.add_argument('-n', '--numargs', type=int, required=True, help='The number of arguments to pass to the executable.')
parser.add_argument('executable', nargs=argparse.REMAINDER, help='The host executable.')
args = parser.parse_args()

report_file = "report.ini"
x = []
y = []

for i in np.arange(args.start, args.stop, args.step):
  run_args = [str(i)] * args.numargs
  run = ['./simulate', '-r', report_file, '-b', args.binary] + args.executable + ['-m'] + run_args
  print("simulate: %s" % ' '.join(run_args))
  process = subprocess.Popen(run)
  process.wait()
  if process.returncode == 0:
    config = ConfigParser.ConfigParser()
    config.read(report_file)
    x.append(i)
    y.append(config.get(' Device ', 'Cycles'))

plt.plot(x, y)
plt.savefig(args.outfile)
